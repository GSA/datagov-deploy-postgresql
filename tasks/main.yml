---
- name: create database role for app
  postgresql_user: >-
    name={{ postgresql_role_name }}
    db=postgres
    password={{ postgresql_role_password }}
    login_host={{ postgresql_login_host }}
    login_user={{ postgresql_login_user }}
    login_password={{ postgresql_login_password }}
    role_attr_flags={{ postgresql_role_attr_flags | join(',') }}
    state=present

# Needed for RDS, avoids "must be member of `role`"
- name: add login_user to new role
  postgresql_membership: >-
    db=postgres
    groups={{ postgresql_role_name }}
    login_host={{ postgresql_login_host }}
    login_password={{ postgresql_login_password }}
    login_user={{ postgresql_login_user }}
    state=present
    target_roles={{ postgresql_login_user }}

- name: create app database
  postgresql_db: >-
    name={{ postgresql_database_name }}
    owner={{ postgresql_role_name }}
    encoding=UTF-8
    login_host={{ postgresql_login_host }}
    login_user={{ postgresql_login_user }}
    login_password={{ postgresql_login_password }}
    template=template0
    state=present

- name: configure extensions
  postgresql_ext: >-
    name={{ item }}
    db={{ postgresql_database_name }}
    login_host={{ postgresql_login_host }}
    login_user={{ postgresql_login_user }}
    login_password={{ postgresql_login_password }}
    state=present
  with_items: "{{ postgresql_enable_extensions }}"
